#!/bin/bash
###########################################################
# Sets the domain and DNS servers.
###########################################################
# Tested on:
#  - Raspbian
#  - CentOS 7
#  - OpenSuSE
###########################################################
# Details:
# domain and 1st dns server are required
###########################################################
TMP_FILE=/tmp/resolv.conf.tmp
CONF_FILE=/etc/resolv.conf
BAK_FILE=/etc/resolv.conf.bak
function cleanup() {
  if [ -e "$TMP_FILE" ]; then
    rm $TMP_FILE
  fi
}
function help() {
  echo "Sets the domain and DNS servers."
  echo "Syntax: set_dns [-h|d|s]"
  echo "options:"
  echo "h     Print this Help."
  echo "d     Pass the domain."
  echo "s     Pass one DNS server (many can be passed using the option more times)."
  echo
}
function validate_ip() {
  local ip=$1
  local r=1
  if [[ $ip =~ ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
    OIFS=$IFS
    IFS='.'
    ip=($ip)
    IFS=$OIFS
    if [[ ${ip[0]} -le 255 && ${ip[1]} -le 255 && ${ip[2]} -le 255 && ${ip[3]} -le 255 ]]; then
      r=0
    fi
  fi
  return $r
}
function write_domain() {
  if [ ! -z "$DOMAIN" ] && [ "$DOMAIN_WRITTEN" == 0 ]; then
    APPEND=0
    DOMAIN_WRITTEN=1
    echo "domain $DOMAIN" >> $TMP_FILE
  fi
}
function write_ns() {
  write_domain
  if [ ! "$NAMESERVERS_LEN" == 0 ] && [ $NS_WRITTEN == 0 ]; then
    APPEND=0
    NS_WRITTEN=1
    for (( i=0; i<$NAMESERVERS_LEN; i++ ));
    do
      local ns=${NAMESERVERS[$i]}
      if validate_ip $ns; then
        echo "nameserver $ns" >> $TMP_FILE
      fi
    done
  fi
}
DOMAIN=''
NAMESERVERS=()
NOW=$(date '+%d/%m/%Y %H:%M:%S');
while getopts ":h:d:s:" option; do
  case $option in
    h) 
      help
      exit
      ;;
    d)
      DOMAIN=$OPTARG
      ;;
    s)
      NAMESERVERS[${#NAMESERVERS[@]}]=$OPTARG
      ;;
    \?) # Invalid option
      echo "Error: Invalid option"
      exit
      ;;
  esac
done
NAMESERVERS_LEN=${#NAMESERVERS[@]}
if [ -z "$DOMAIN" ] && [ "$NAMESERVERS_LEN" == "0" ]; then
  help
  echo "At least domain or one name server is requied."
  exit 1
fi
if [ -e "$TMP_FILE" ]; then
  rm $TMP_FILE
fi
trap cleanup SIGINT SIGTERM ERR EXIT
echo "# Generated by com.focussia.util.net." > $TMP_FILE
echo "# Date: $NOW" >> $TMP_FILE
DOMAIN_WRITTEN=0
NS_WRITTEN=0
if [ -e "$CONF_FILE" ]; then
  while IFS= read -r line
  do
    APPEND=1
    if [[ "$line" == "# Generated"* ]] || [[ "$line" == "#Generated"* ]] || [[ "$line" == "# Date:"* ]]; then
      APPEND=0
    else
      if [[ "$line" == "domain"* ]] && [[ ! -z "$DOMAIN" ]]; then
        write_domain
      fi
      if [[ "$line" == "nameserver"* ]] && [[ ! "$NAMESERVERS_LEN" == "0" ]]; then
        write_ns
      fi
    fi
    if [ $APPEND == 1 ]; then
      echo "$line" >> $TMP_FILE
    fi
  done < "$CONF_FILE"
fi
write_domain
write_ns
if [ -e "$BAK_FILE" ]; then
  rm $BAK_FILE
fi
if [ -e "$CONF_FILE" ]; then
  mv $CONF_FILE $BAK_FILE
fi
mv $TMP_FILE $CONF_FILE
chmod 644 $CONF_FILE
chown root.root $CONF_FILE
exit 0
